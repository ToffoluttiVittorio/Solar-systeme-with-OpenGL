#version 330 core

in vec2 UV;
in vec3 FragPos;
in vec3 Normal;
in vec3 LightDir; // Si vous avez envoyé la direction de la lumière depuis le vertex shader

out vec4 FragColor;

uniform sampler2D texture_diffuse;
uniform vec3 lightColor;
uniform float ambientStrength;
uniform float diffuseStrength;

void main() {
    // Couleur de la texture
    vec3 texColor = texture(texture_diffuse, UV).rgb;

    // Lumière ambiante
    vec3 ambient = ambientStrength * texColor;

    // Diffuse
    float diff = max(dot(normalize(Normal), normalize(LightDir)), 0.0);
    vec3 diffuse = diffuseStrength * diff * lightColor;

    // Couleur finale
    vec3 result = (ambient + diffuse) * texColor;

    FragColor = vec4(result, 1.0);
}

