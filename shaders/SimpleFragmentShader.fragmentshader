#version 330 core


in vec2 UV;
in vec4 ObjLum;
in vec4 Normal;

out vec3 color;

uniform sampler2D myTextureSampler;
uniform vec3 lightColor;
uniform vec3 diffuselightColor;
uniform float ambientStrength;
uniform float diffuseStrength;


void main() {

    // Couleur de la texture
    vec3 texColor = texture(myTextureSampler, UV).rgb;

    ///////////// Lumi√®re ambiante
    vec3 ambient = lightColor * ambientStrength * texColor;

    /////////////// Diffuse
    vec3 objLumDir = normalize(ObjLum.xyz);
    vec3 normal = normalize(Normal.xyz);
    float diff = clamp(dot(normal, objLumDir), 0.0,1);
    vec3 diffuse = diffuseStrength * diff * diffuselightColor;
    
    // Couleur finale
    color = (ambient + diffuse) * texColor;

}

